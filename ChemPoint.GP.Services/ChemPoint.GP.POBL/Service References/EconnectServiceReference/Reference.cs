//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChemPoint.GP.POBL.EconnectServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IncrementDecrement", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
    public enum IncrementDecrement : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Decrement = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Increment = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
    [System.SerializableAttribute()]
    public partial class eConnectSqlFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlErrorCollection ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlErrorCollection Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="eConnectSqlErrorCollection", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect", ItemName="eConnectSqlError")]
    [System.SerializableAttribute()]
    public class eConnectSqlErrorCollection : System.Collections.Generic.List<ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlError> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eConnectSqlError", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
    [System.SerializableAttribute()]
    public partial class eConnectSqlError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ErrorClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LineNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcedureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Class {
            get {
                return this.ClassField;
            }
            set {
                if ((this.ClassField.Equals(value) != true)) {
                    this.ClassField = value;
                    this.RaisePropertyChanged("Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte ErrorClass {
            get {
                return this.ErrorClassField;
            }
            set {
                if ((this.ErrorClassField.Equals(value) != true)) {
                    this.ErrorClassField = value;
                    this.RaisePropertyChanged("ErrorClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LineNumber {
            get {
                return this.LineNumberField;
            }
            set {
                if ((this.LineNumberField.Equals(value) != true)) {
                    this.LineNumberField = value;
                    this.RaisePropertyChanged("LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Procedure {
            get {
                return this.ProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureField, value) != true)) {
                    this.ProcedureField = value;
                    this.RaisePropertyChanged("Procedure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Server {
            get {
                return this.ServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerField, value) != true)) {
                    this.ServerField = value;
                    this.RaisePropertyChanged("Server");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
    [System.SerializableAttribute()]
    public partial class eConnectFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionType {
            get {
                return this.ExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionTypeField, value) != true)) {
                    this.ExceptionTypeField = value;
                    this.RaisePropertyChanged("ExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RMPaymentType", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
    public enum RMPaymentType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMInvoices = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMScheduledPayments = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMDebitMemos = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMFinanceCharges = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMServiceRepairs = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMWarranty = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMCreditMemo = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMReturn = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMPayments = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IVDocType", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
    public enum IVDocType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IVAdjustment = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IVVariance = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IVTransfer = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SopType", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
    public enum SopType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SOPQuote = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SOPOrder = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SOPInvoice = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SOPReturn = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SOPBackOrder = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RollBackDocument", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
    [System.SerializableAttribute()]
    public partial class RollBackDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemPoint.GP.POBL.EconnectServiceReference.TransactionType DocumentTransactionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> DocumentTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentID {
            get {
                return this.DocumentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentIDField, value) != true)) {
                    this.DocumentIDField = value;
                    this.RaisePropertyChanged("DocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentNumber {
            get {
                return this.DocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNumberField, value) != true)) {
                    this.DocumentNumberField = value;
                    this.RaisePropertyChanged("DocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemPoint.GP.POBL.EconnectServiceReference.TransactionType DocumentTransactionType {
            get {
                return this.DocumentTransactionTypeField;
            }
            set {
                if ((this.DocumentTransactionTypeField.Equals(value) != true)) {
                    this.DocumentTransactionTypeField = value;
                    this.RaisePropertyChanged("DocumentTransactionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((this.DocumentTypeField.Equals(value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionType", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
    public enum TransactionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SOP = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GL = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RM = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PM = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POP = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POPReceipt = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IVTrans = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IVTransfer = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/dynamics/gp/2010/01", ConfigurationName="EconnectServiceReference.eConnect")]
    public interface eConnect {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPOP" +
            "ReceiptNumber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPOP" +
            "ReceiptNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPOP" +
            "ReceiptNumbereConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPOP" +
            "ReceiptNumbereConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string GetNextPOPReceiptNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPOP" +
            "ReceiptNumber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPOP" +
            "ReceiptNumberResponse")]
        System.Threading.Tasks.Task<string> GetNextPOPReceiptNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextGLJ" +
            "ournalEntryNumber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextGLJ" +
            "ournalEntryNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextGLJ" +
            "ournalEntryNumbereConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextGLJ" +
            "ournalEntryNumbereConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string GetNextGLJournalEntryNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextGLJ" +
            "ournalEntryNumber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextGLJ" +
            "ournalEntryNumberResponse")]
        System.Threading.Tasks.Task<string> GetNextGLJournalEntryNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPON" +
            "umber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPON" +
            "umberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPON" +
            "umbereConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPON" +
            "umbereConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string GetNextPONumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPON" +
            "umber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPON" +
            "umberResponse")]
        System.Threading.Tasks.Task<string> GetNextPONumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextRMN" +
            "umber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextRMN" +
            "umberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextRMN" +
            "umbereConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextRMN" +
            "umbereConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string GetNextRMNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.RMPaymentType documentType, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextRMN" +
            "umber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextRMN" +
            "umberResponse")]
        System.Threading.Tasks.Task<string> GetNextRMNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.RMPaymentType documentType, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetPMNextV" +
            "oucherNumber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetPMNextV" +
            "oucherNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetPMNextV" +
            "oucherNumbereConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetPMNextV" +
            "oucherNumbereConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string GetPMNextVoucherNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetPMNextV" +
            "oucherNumber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetPMNextV" +
            "oucherNumberResponse")]
        System.Threading.Tasks.Task<string> GetPMNextVoucherNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextIVN" +
            "umber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextIVN" +
            "umberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextIVN" +
            "umbereConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextIVN" +
            "umbereConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string GetNextIVNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.IVDocType documentType, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextIVN" +
            "umber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextIVN" +
            "umberResponse")]
        System.Threading.Tasks.Task<string> GetNextIVNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.IVDocType documentType, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextSOP" +
            "Number", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextSOP" +
            "NumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextSOP" +
            "NumbereConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextSOP" +
            "NumbereConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string GetNextSOPNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string DOCIDKey, ChemPoint.GP.POBL.EconnectServiceReference.SopType documentType, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextSOP" +
            "Number", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextSOP" +
            "NumberResponse")]
        System.Threading.Tasks.Task<string> GetNextSOPNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string DOCIDKey, ChemPoint.GP.POBL.EconnectServiceReference.SopType documentType, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/IDocumentNumberRollback/RollBack" +
            "Documents", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/IDocumentNumberRollback/RollBack" +
            "DocumentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/IDocumentNumberRollback/RollBack" +
            "DocumentseConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/IDocumentNumberRollback/RollBack" +
            "DocumentseConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        bool RollBackDocuments(ChemPoint.GP.POBL.EconnectServiceReference.RollBackDocument[] documentNumberCollection, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/IDocumentNumberRollback/RollBack" +
            "Documents", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/IDocumentNumberRollback/RollBack" +
            "DocumentsResponse")]
        System.Threading.Tasks.Task<bool> RollBackDocumentsAsync(ChemPoint.GP.POBL.EconnectServiceReference.RollBackDocument[] documentNumberCollection, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/CreateEntity", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/CreateEntityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/CreateEntityeConnectFau" +
            "ltFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/CreateEntityeConnectSql" +
            "FaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        bool CreateEntity(string connectionString, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/CreateEntity", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/CreateEntityResponse")]
        System.Threading.Tasks.Task<bool> CreateEntityAsync(string connectionString, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/CreateTransactionEntity" +
            "", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/CreateTransactionEntity" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/CreateTransactionEntity" +
            "eConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/CreateTransactionEntity" +
            "eConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string CreateTransactionEntity(string connectionString, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/CreateTransactionEntity" +
            "", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/CreateTransactionEntity" +
            "Response")]
        System.Threading.Tasks.Task<string> CreateTransactionEntityAsync(string connectionString, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/UpdateEntity", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/UpdateEntityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/UpdateEntityeConnectSql" +
            "FaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/UpdateEntityeConnectFau" +
            "ltFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        bool UpdateEntity(string connectionString, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/UpdateEntity", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/UpdateEntityResponse")]
        System.Threading.Tasks.Task<bool> UpdateEntityAsync(string connectionString, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DeleteEntity", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DeleteEntityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DeleteEntityeConnectSql" +
            "FaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DeleteEntityeConnectFau" +
            "ltFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        bool DeleteEntity(string connectionString, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DeleteEntity", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DeleteEntityResponse")]
        System.Threading.Tasks.Task<bool> DeleteEntityAsync(string connectionString, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/UpdateTransactionEntity" +
            "", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/UpdateTransactionEntity" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/UpdateTransactionEntity" +
            "eConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/UpdateTransactionEntity" +
            "eConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        bool UpdateTransactionEntity(string connectionString, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/UpdateTransactionEntity" +
            "", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/UpdateTransactionEntity" +
            "Response")]
        System.Threading.Tasks.Task<bool> UpdateTransactionEntityAsync(string connectionString, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DeleteTransactionEntity" +
            "", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DeleteTransactionEntity" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DeleteTransactionEntity" +
            "eConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DeleteTransactionEntity" +
            "eConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        bool DeleteTransactionEntity(string connectionString, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DeleteTransactionEntity" +
            "", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DeleteTransactionEntity" +
            "Response")]
        System.Threading.Tasks.Task<bool> DeleteTransactionEntityAsync(string connectionString, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/GetEntity", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/GetEntityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/GetEntityeConnectSqlFau" +
            "ltFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/GetEntityeConnectFaultF" +
            "ault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string GetEntity(string connectionString, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/GetEntity", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/GetEntityResponse")]
        System.Threading.Tasks.Task<string> GetEntityAsync(string connectionString, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/Dispose", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DisposeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DisposeeConnectSqlFault" +
            "Fault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DisposeeConnectFaultFau" +
            "lt", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        void Dispose();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/Dispose", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/eConnect/DisposeResponse")]
        System.Threading.Tasks.Task DisposeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface eConnectChannel : ChemPoint.GP.POBL.EconnectServiceReference.eConnect, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class eConnectClient : System.ServiceModel.ClientBase<ChemPoint.GP.POBL.EconnectServiceReference.eConnect>, ChemPoint.GP.POBL.EconnectServiceReference.eConnect {
        
        public eConnectClient() {
        }
        
        public eConnectClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public eConnectClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public eConnectClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public eConnectClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetNextPOPReceiptNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetNextPOPReceiptNumber(incdec, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<string> GetNextPOPReceiptNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetNextPOPReceiptNumberAsync(incdec, databaseConnectionString);
        }
        
        public string GetNextGLJournalEntryNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetNextGLJournalEntryNumber(incdec, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<string> GetNextGLJournalEntryNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetNextGLJournalEntryNumberAsync(incdec, databaseConnectionString);
        }
        
        public string GetNextPONumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetNextPONumber(incdec, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<string> GetNextPONumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetNextPONumberAsync(incdec, databaseConnectionString);
        }
        
        public string GetNextRMNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.RMPaymentType documentType, string databaseConnectionString) {
            return base.Channel.GetNextRMNumber(incdec, documentType, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<string> GetNextRMNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.RMPaymentType documentType, string databaseConnectionString) {
            return base.Channel.GetNextRMNumberAsync(incdec, documentType, databaseConnectionString);
        }
        
        public string GetPMNextVoucherNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetPMNextVoucherNumber(incdec, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<string> GetPMNextVoucherNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetPMNextVoucherNumberAsync(incdec, databaseConnectionString);
        }
        
        public string GetNextIVNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.IVDocType documentType, string databaseConnectionString) {
            return base.Channel.GetNextIVNumber(incdec, documentType, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<string> GetNextIVNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.IVDocType documentType, string databaseConnectionString) {
            return base.Channel.GetNextIVNumberAsync(incdec, documentType, databaseConnectionString);
        }
        
        public string GetNextSOPNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string DOCIDKey, ChemPoint.GP.POBL.EconnectServiceReference.SopType documentType, string databaseConnectionString) {
            return base.Channel.GetNextSOPNumber(incdec, DOCIDKey, documentType, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<string> GetNextSOPNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string DOCIDKey, ChemPoint.GP.POBL.EconnectServiceReference.SopType documentType, string databaseConnectionString) {
            return base.Channel.GetNextSOPNumberAsync(incdec, DOCIDKey, documentType, databaseConnectionString);
        }
        
        public bool RollBackDocuments(ChemPoint.GP.POBL.EconnectServiceReference.RollBackDocument[] documentNumberCollection, string databaseConnectionString) {
            return base.Channel.RollBackDocuments(documentNumberCollection, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<bool> RollBackDocumentsAsync(ChemPoint.GP.POBL.EconnectServiceReference.RollBackDocument[] documentNumberCollection, string databaseConnectionString) {
            return base.Channel.RollBackDocumentsAsync(documentNumberCollection, databaseConnectionString);
        }
        
        public bool CreateEntity(string connectionString, string xml) {
            return base.Channel.CreateEntity(connectionString, xml);
        }
        
        public System.Threading.Tasks.Task<bool> CreateEntityAsync(string connectionString, string xml) {
            return base.Channel.CreateEntityAsync(connectionString, xml);
        }
        
        public string CreateTransactionEntity(string connectionString, string xml) {
            return base.Channel.CreateTransactionEntity(connectionString, xml);
        }
        
        public System.Threading.Tasks.Task<string> CreateTransactionEntityAsync(string connectionString, string xml) {
            return base.Channel.CreateTransactionEntityAsync(connectionString, xml);
        }
        
        public bool UpdateEntity(string connectionString, string xml) {
            return base.Channel.UpdateEntity(connectionString, xml);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEntityAsync(string connectionString, string xml) {
            return base.Channel.UpdateEntityAsync(connectionString, xml);
        }
        
        public bool DeleteEntity(string connectionString, string xml) {
            return base.Channel.DeleteEntity(connectionString, xml);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEntityAsync(string connectionString, string xml) {
            return base.Channel.DeleteEntityAsync(connectionString, xml);
        }
        
        public bool UpdateTransactionEntity(string connectionString, string xml) {
            return base.Channel.UpdateTransactionEntity(connectionString, xml);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTransactionEntityAsync(string connectionString, string xml) {
            return base.Channel.UpdateTransactionEntityAsync(connectionString, xml);
        }
        
        public bool DeleteTransactionEntity(string connectionString, string xml) {
            return base.Channel.DeleteTransactionEntity(connectionString, xml);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTransactionEntityAsync(string connectionString, string xml) {
            return base.Channel.DeleteTransactionEntityAsync(connectionString, xml);
        }
        
        public string GetEntity(string connectionString, string xml) {
            return base.Channel.GetEntity(connectionString, xml);
        }
        
        public System.Threading.Tasks.Task<string> GetEntityAsync(string connectionString, string xml) {
            return base.Channel.GetEntityAsync(connectionString, xml);
        }
        
        public void Dispose() {
            base.Channel.Dispose();
        }
        
        public System.Threading.Tasks.Task DisposeAsync() {
            return base.Channel.DisposeAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/dynamics/gp/2010/01", ConfigurationName="EconnectServiceReference.ITransactionRecordIds")]
    public interface ITransactionRecordIds {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPOP" +
            "ReceiptNumber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPOP" +
            "ReceiptNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPOP" +
            "ReceiptNumbereConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPOP" +
            "ReceiptNumbereConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string GetNextPOPReceiptNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPOP" +
            "ReceiptNumber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPOP" +
            "ReceiptNumberResponse")]
        System.Threading.Tasks.Task<string> GetNextPOPReceiptNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextGLJ" +
            "ournalEntryNumber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextGLJ" +
            "ournalEntryNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextGLJ" +
            "ournalEntryNumbereConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextGLJ" +
            "ournalEntryNumbereConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string GetNextGLJournalEntryNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextGLJ" +
            "ournalEntryNumber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextGLJ" +
            "ournalEntryNumberResponse")]
        System.Threading.Tasks.Task<string> GetNextGLJournalEntryNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPON" +
            "umber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPON" +
            "umberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPON" +
            "umbereConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPON" +
            "umbereConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string GetNextPONumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPON" +
            "umber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextPON" +
            "umberResponse")]
        System.Threading.Tasks.Task<string> GetNextPONumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextRMN" +
            "umber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextRMN" +
            "umberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextRMN" +
            "umbereConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextRMN" +
            "umbereConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string GetNextRMNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.RMPaymentType documentType, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextRMN" +
            "umber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextRMN" +
            "umberResponse")]
        System.Threading.Tasks.Task<string> GetNextRMNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.RMPaymentType documentType, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetPMNextV" +
            "oucherNumber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetPMNextV" +
            "oucherNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetPMNextV" +
            "oucherNumbereConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetPMNextV" +
            "oucherNumbereConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string GetPMNextVoucherNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetPMNextV" +
            "oucherNumber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetPMNextV" +
            "oucherNumberResponse")]
        System.Threading.Tasks.Task<string> GetPMNextVoucherNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextIVN" +
            "umber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextIVN" +
            "umberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextIVN" +
            "umbereConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextIVN" +
            "umbereConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string GetNextIVNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.IVDocType documentType, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextIVN" +
            "umber", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextIVN" +
            "umberResponse")]
        System.Threading.Tasks.Task<string> GetNextIVNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.IVDocType documentType, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextSOP" +
            "Number", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextSOP" +
            "NumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextSOP" +
            "NumbereConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextSOP" +
            "NumbereConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        string GetNextSOPNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string DOCIDKey, ChemPoint.GP.POBL.EconnectServiceReference.SopType documentType, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextSOP" +
            "Number", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/ITransactionRecordIds/GetNextSOP" +
            "NumberResponse")]
        System.Threading.Tasks.Task<string> GetNextSOPNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string DOCIDKey, ChemPoint.GP.POBL.EconnectServiceReference.SopType documentType, string databaseConnectionString);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransactionRecordIdsChannel : ChemPoint.GP.POBL.EconnectServiceReference.ITransactionRecordIds, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransactionRecordIdsClient : System.ServiceModel.ClientBase<ChemPoint.GP.POBL.EconnectServiceReference.ITransactionRecordIds>, ChemPoint.GP.POBL.EconnectServiceReference.ITransactionRecordIds {
        
        public TransactionRecordIdsClient() {
        }
        
        public TransactionRecordIdsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransactionRecordIdsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionRecordIdsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionRecordIdsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetNextPOPReceiptNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetNextPOPReceiptNumber(incdec, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<string> GetNextPOPReceiptNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetNextPOPReceiptNumberAsync(incdec, databaseConnectionString);
        }
        
        public string GetNextGLJournalEntryNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetNextGLJournalEntryNumber(incdec, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<string> GetNextGLJournalEntryNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetNextGLJournalEntryNumberAsync(incdec, databaseConnectionString);
        }
        
        public string GetNextPONumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetNextPONumber(incdec, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<string> GetNextPONumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetNextPONumberAsync(incdec, databaseConnectionString);
        }
        
        public string GetNextRMNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.RMPaymentType documentType, string databaseConnectionString) {
            return base.Channel.GetNextRMNumber(incdec, documentType, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<string> GetNextRMNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.RMPaymentType documentType, string databaseConnectionString) {
            return base.Channel.GetNextRMNumberAsync(incdec, documentType, databaseConnectionString);
        }
        
        public string GetPMNextVoucherNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetPMNextVoucherNumber(incdec, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<string> GetPMNextVoucherNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string databaseConnectionString) {
            return base.Channel.GetPMNextVoucherNumberAsync(incdec, databaseConnectionString);
        }
        
        public string GetNextIVNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.IVDocType documentType, string databaseConnectionString) {
            return base.Channel.GetNextIVNumber(incdec, documentType, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<string> GetNextIVNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, ChemPoint.GP.POBL.EconnectServiceReference.IVDocType documentType, string databaseConnectionString) {
            return base.Channel.GetNextIVNumberAsync(incdec, documentType, databaseConnectionString);
        }
        
        public string GetNextSOPNumber(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string DOCIDKey, ChemPoint.GP.POBL.EconnectServiceReference.SopType documentType, string databaseConnectionString) {
            return base.Channel.GetNextSOPNumber(incdec, DOCIDKey, documentType, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<string> GetNextSOPNumberAsync(ChemPoint.GP.POBL.EconnectServiceReference.IncrementDecrement incdec, string DOCIDKey, ChemPoint.GP.POBL.EconnectServiceReference.SopType documentType, string databaseConnectionString) {
            return base.Channel.GetNextSOPNumberAsync(incdec, DOCIDKey, documentType, databaseConnectionString);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/dynamics/gp/2010/01", ConfigurationName="EconnectServiceReference.IDocumentNumberRollback")]
    public interface IDocumentNumberRollback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/IDocumentNumberRollback/RollBack" +
            "Documents", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/IDocumentNumberRollback/RollBack" +
            "DocumentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectSqlFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/IDocumentNumberRollback/RollBack" +
            "DocumentseConnectSqlFaultFault", Name="eConnectSqlFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        [System.ServiceModel.FaultContractAttribute(typeof(ChemPoint.GP.POBL.EconnectServiceReference.eConnectFault), Action="http://schemas.microsoft.com/dynamics/gp/2010/01/IDocumentNumberRollback/RollBack" +
            "DocumentseConnectFaultFault", Name="eConnectFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.GP.eConnect")]
        bool RollBackDocuments(ChemPoint.GP.POBL.EconnectServiceReference.RollBackDocument[] documentNumberCollection, string databaseConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/dynamics/gp/2010/01/IDocumentNumberRollback/RollBack" +
            "Documents", ReplyAction="http://schemas.microsoft.com/dynamics/gp/2010/01/IDocumentNumberRollback/RollBack" +
            "DocumentsResponse")]
        System.Threading.Tasks.Task<bool> RollBackDocumentsAsync(ChemPoint.GP.POBL.EconnectServiceReference.RollBackDocument[] documentNumberCollection, string databaseConnectionString);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDocumentNumberRollbackChannel : ChemPoint.GP.POBL.EconnectServiceReference.IDocumentNumberRollback, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentNumberRollbackClient : System.ServiceModel.ClientBase<ChemPoint.GP.POBL.EconnectServiceReference.IDocumentNumberRollback>, ChemPoint.GP.POBL.EconnectServiceReference.IDocumentNumberRollback {
        
        public DocumentNumberRollbackClient() {
        }
        
        public DocumentNumberRollbackClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentNumberRollbackClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentNumberRollbackClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentNumberRollbackClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RollBackDocuments(ChemPoint.GP.POBL.EconnectServiceReference.RollBackDocument[] documentNumberCollection, string databaseConnectionString) {
            return base.Channel.RollBackDocuments(documentNumberCollection, databaseConnectionString);
        }
        
        public System.Threading.Tasks.Task<bool> RollBackDocumentsAsync(ChemPoint.GP.POBL.EconnectServiceReference.RollBackDocument[] documentNumberCollection, string databaseConnectionString) {
            return base.Channel.RollBackDocumentsAsync(documentNumberCollection, databaseConnectionString);
        }
    }
}
